// obj.js | Unobtrusive object subscribe
// https://github.com/Daniel-Hug/object-subscribe

(function(f,e){"function"===typeof define&&define.amd?define([],e):"object"===typeof exports?module.exports=e():f.Obj=e()})(this,function(){function f(b){for(var a=0,c=e.length;a<c;a++)if(e[a][0]===b)return a;return-1}var e=[],d={has:function(b,a){return d.hasOwnProperty.call(b,a)}};d.keys=Object.keys||function(b){var a=[],c;for(c in b)d.has(b,c)&&a.push(c);return a};d.type=function(b){return d.toString.call(b).slice(8,-1).toLowerCase()};d.extend=function(b,a){if("object"===typeof b)if("array"===d.type(b)){a=a||[];for(var c=0,e=b.length;c<e;c++)a.push(d.extend(b[c]))}else for(c in a=a||{},b)d.has(b,c)&&(a[c]=d.extend(b[c]));else return b;return a};d.subscribe=function(b,a,c){var d=f(b);0<=d?e[d][1].push(a):e.push([b,[a]]);c&&a(b)};d.unsubscribe=function(b,a){var c=f(b),d;if(0<=c)if(a){if((c=e[c][1])&&c.length)for(d=a.length;d--;)c.splice(c.indexOf(a[d]),1)}else e.splice(c,1)};d.set=function(b,a){for(var c in a)d.has(a,c)&&(b[c]=a[c]);d.changed(b)};d.unset=function(b,a){for(var c=a.length;c--;)delete b[a[c]];d.changed(b)};d.reset=function(b,a){for(var c in b)d.has(b,c)&&delete b[c];d.set(b,a)};d.changed=function(b){var a=f(b);if(0<=a)for(var c=e[a][1],d=c.length,a=0;a<d;a++)c[a](b)};return d});
